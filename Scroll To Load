import React, { useState, useEffect } from "react";
import $ from "jquery";
function Hooks() {
  const [data, setData] = useState([]);
  const [start, setStart] = useState(0);
  const [loader, setLoader] = useState(false);
  const getRequest = () => {
    $.ajax({
      type: "GET",
      url: `https://jsonplaceholder.typicode.com/photos?_start=${start}&_limit=6`,
      beforeSend: function () {
        return setLoader(true);
      },
      success: function (resp) {
        resp.map((item) => {
          return setData((old_data) => {
            return [...old_data, item];
          });
        });
      },
      completed: function () {
        return setLoader(false);
      },
    });
  };
  const infiniteScroll = () => {
    window.onscroll = () => {
      let windowScroll = window.innerHeight + window.scrollY;
      let bodyHeight = document.body.offsetHeight - 50;
      if (windowScroll >= bodyHeight) {
        return setStart(start + 5);
      }
    };
  };
  const Loader = () => {
    return (
      <>
        <div className="d-flex justify-content-center my-5">
          <div className="spinner-border text-muted me-3"></div>
          <div className="spinner-border text-primary me-3"></div>
          <div className="spinner-border text-success me-3"></div>
          <div className="spinner-border text-info me-3"></div>
          <div className="spinner-border text-warning me-3"></div>
          <div className="spinner-border text-danger me-3"></div>
          <div className="spinner-border text-secondary me-3"></div>
          <div className="spinner-border text-dark"></div>
          <div className="spinner-border text-light"></div>
        </div>
      </>
    );
  };
  useEffect(() => {
    getRequest();
    infiniteScroll();
  }, [start]);
  const downloadNow = (data) => {
    const url = data.url;
    const a = document.createElement("a");
    a.href = url;
    a.download = "pic-" + data.id + ".png";
    a.click();
    a.remove();
  };
  const Column = ({ data }) => {
    return (
      <>
        <div className="col-md-3 mb-3">
          <div className="card">
            <img
              className="card-img-top"
              src={data.url}
              alt={data.title}
              width={"100%"}
            />
            <div className="card-body">
              <p>JSON api </p>
              <button
                className="btn btn-primary px-3 py-1"
                onClick={() => downloadNow(data)}
              >
                Download
              </button>
            </div>
          </div>
        </div>
      </>
    );
  };
  return (
    <div className="container py-4">
      <h1>Content load on scrollY</h1>
      <hr />
      <div className="row">
        {data.map((item) => {
          return <Column key={item.id} data={item} />;
        })}
      </div>
      {loader && <Loader />}
    </div>
  );
}

export default Hooks;


# command
  - import this component to App.js -> (<Hooks />)
